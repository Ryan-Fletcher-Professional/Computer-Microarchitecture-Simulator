SET WORD SIZE 64
SET STACK SIZE 1000000000
SET BUFFER SIZE 1000000000

BR0 %bottom1
CMP #0, R0
BR0 %bottom1
BRN %bottom2
SUB R0, #1, R0, 1
COPY #0, R0
BRN %bottom2
COPY #16, R4  @ Number of items to add
LOADL #0, R8
LOADL #0, R12
CALL %operate_arithmetic
STR R0, #20
COPY R4, R1
ADD #4, R4
COPY #0, R0
CALL %operate_bitwise
STR R0, #21
JUMP %undo
=operate_arithmetic
LOAD R1, R3
MOD R1, #4, R2
CMP R2, #0
BR0 %add
CMP R2, #1
BR0 %sub
CMP R2, #2
BR0 %mul
CMP R2, #3
BR0 %div
=add
ADD R0, R3
JUMP %call_next_a
=sub
SUB R0, R3
JUMP %call_next_a
=mul
MUL R0, R3
JUMP %call_next_a
=div
DIV R0, R3
JUMP %call_next_a
=call_next_a
ADD R1, #1
CMP R1, R4
BR0 %operate_a_return           @ Will add relative later :)
CALL %operate_arithmetic
=operate_a_return
RETURN
=operate_bitwise
LOAD R1, R3
MOD R1, #4, R2
CMP R2, #0
BR0 %and
CMP R2, #1
BR0 %or
CMP R2, #2
BR0 %xor
CMP R2, #3
BR0 %not
=and
AND R0, R3
JUMP %call_next_b
=or
OR R0, R3
JUMP %call_next_b
=xor
XOR R0, R3
JUMP %call_next_b
=not
NOT R0
JUMP %call_next_b
=call_next_b
ADD R1, #1
CMP R1, R4
BR0 %operate_b_return  @ Will add relative later :)
CALL %operate_bitwise
=operate_b_return
RETURN
=bottom1
JUMP #8
=bottom2
JUMP #12
=undo
UNDO #2
UNDO #4, #2
STRL R1, #24
HALT #0